import { Theme } from '../types/index.js';

export const ICONS_PER_LINE = 15;
export const THEMES: Theme[] = ['light', 'dark'];

export const CONTENT = {
  JSON: {
    'content-type': 'application/json;charset=UTF-8',
    'Cache-Control': 'public, max-age=86400',
    ETag: '"icons-json-tag"',
  },
  HTML: {
    'content-type': 'text/html;charset=UTF-8',
    'Cache-Control': 'public, max-age=86400',
    ETag: '"icons-html-tag"',
  },
  SVG: {
    'content-type': 'image/svg+xml',
    'Cache-Control': 'public, max-age=86400',
    ETag: '"icons-svg-tag"',
  },
};

export const ERRORS = {
  INVALID_THEME: `Theme must be ${THEMES.join(' or ')}`,
  INVALID_PERLINE: 'Icons per line must be a number between 1 and 50',
  NO_ICON_PARAM: 'You must specify ?i=icon1,icon2 or i=all',
  NO_ICONS_FOUND: 'No valid icons found from the given parameters',
  NOT_FOUND: 'Not found',
};

export const shortNames: Record<string, string> = {
  js: 'javascript',
  ts: 'typescript',
  py: 'python',
  tailwind: 'tailwindcss',
  vue: 'vuejs',
  nuxt: 'nuxtjs',
  go: 'golang',
  cf: 'cloudflare',
  wasm: 'webassembly',
  postgres: 'postgresql',
  k8s: 'kubernetes',
  next: 'nextjs',
  mongo: 'mongodb',
  md: 'markdown',
  ps: 'adobephotoshop',
  ai: 'adobeillustrator',
  pr: 'adobepremiere',
  ae: 'adobeaftereffects',
  scss: 'sass',
  sc: 'scala',
  net: 'dotnet',
  gatsbyjs: 'gatsby',
  gql: 'graphql',
  vlang: 'v',
  aws: 'amazonwebservices',
  bots: 'discordbots',
  express: 'expressjs',
  googlecloud: 'gcp',
  mui: 'materialui',
  windi: 'windicss',
  unreal: 'unrealengine',
  nest: 'nestjs',
  ktorio: 'ktor',
  pwsh: 'powershell',
  au: 'adobeaudition',
  rollup: 'rollupjs',
  rxjs: 'reactivex',
  rxjava: 'reactivex',
  ghactions: 'githubactions',
  sklearn: 'scikitlearn',
  ga: 'googleanalytics',
  chart: 'chartjs',
  bulma: 'bulmacss',
  fcad: 'freecad',
  id: 'indesign',
  post: 'postcss',
  risc: 'riscv',
  gas: 'googleappsscript',
  vb: 'visualbasic',
  gr: 'gradio',
  st: 'streamlit',
  np: 'numpy',
  pd: 'pandas',
  plt: 'matplotlib',
  langchain: 'langchain',
  fm: 'framermotion',
};
